//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d SDK
// Copyright (c) Geoweb3d, 2008-2018, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// GeoWeb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////
#pragma once

#include <Geoweb3d/core/GW3DInterFace.h>
#include "Geoweb3dCore/Geoweb3dExports.h"
#include <Geoweb3dCore/Geoweb3dTypes.h>

/*! Primary namespace */
namespace Geoweb3d
{


	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	A data buffer. </summary>
	///
	/// <remarks>	enabled binary and text data </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DDataBuffer 
	{
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Checks if data buffer content is binary. </summary>
		///
		/// <remarks>	If false, data buffer contains string data. </remarks>
		///
		/// <returns>	true if binary, false if not binary. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual bool get_IsBinary() const = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets the buffer. </summary>
		///
		/// <remarks>	Gets the raw buffer. </remarks>
		///
		/// <returns>	the buffer. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual const IGW3DBuffer * get_Buffer() const = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets the buffer. </summary>
		///
		/// <remarks>	Gets the raw buffer. </remarks>
		///
		/// <returns>	the buffer. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual IGW3DBuffer * get_Buffer() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	writes the buffer to a file. </summary>
		///
		/// <remarks>	writes the raw buffer </remarks>
		///
		/// <returns>	success or not. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult WriteToFile(const char* filepath, const char* filename) = 0;
	  
	  ////////////////////////////////////////////////////////////////////////////////////////////////////
	  /// <summary>	Creates a data buffer. </summary>
	  ///
	  /// <param name="interface_version">	(Optional) the interface version. </param>
	  ///
	  /// <returns>	The new data buffer. </returns>
	  ////////////////////////////////////////////////////////////////////////////////////////////////////

	  static GEOWEB3DENGINE_API IGW3DDataBufferPtr create( unsigned interface_version = GEOWEB3D_INTERFACE_VERSION );

	};
}