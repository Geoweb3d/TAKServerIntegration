//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d Attribute Mapper SDK
// Copyright (c) Geoweb3d, 2008-2017, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// Geoweb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////
#pragma once

#include <Geoweb3d/core/GW3DInterFace.h>

/*! Primary namespace */
namespace Geoweb3d
{

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary> Scene. </summary>
///
/// <remarks> </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

struct IGW3DScene
{
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	This will return filename of the scene. </summary>
	///
	/// <returns>	The filename. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual const char* get_Filename() const = 0;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	This will return the Envelope, if the scene is in a WGS84 coordinate system. </summary>
	///
	/// <returns>	The envelope. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual GW3DEnvelope get_Envelope() const = 0;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary> Forces a refresh of all representations on vector layers </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void Refresh() = 0;
};
}